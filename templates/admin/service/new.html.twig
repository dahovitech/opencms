{% extends 'admin/base.html.twig' %}

{% form_theme form 'form_theme.html.twig' %}

{% block title %}Nouveau Service{% endblock %}

{% block body %}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3">Nouveau Service</h1>
                <a href="{{ path('admin_service_index') }}" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Retour
                </a>
            </div>

            {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': true}}) }}
                <div class="row">
                    <!-- Service Configuration -->
                    <div class="col-md-4">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">Configuration du Service</h5>
                            </div>
                            <div class="card-body">
                                {{ form_row(form.slug) }}
                                {{ form_row(form.sortOrder) }}
                                {{ form_row(form.isActive) }}
                                {{ form_row(form.image) }}
                            </div>
                        </div>
                    </div>

                    <!-- Translations -->
                    <div class="col-md-8">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">Traductions</h5>
                            </div>
                            <div class="card-body">
                                <!-- Language Tabs -->
                                <ul class="nav nav-tabs" id="languageTabs" role="tablist">
                                    {% for language in languages %}
                                        <li class="nav-item" role="presentation">
                                            <button class="nav-link {{ loop.first ? 'active' : '' }}" 
                                                    id="{{ language.code }}-tab" 
                                                    data-bs-toggle="tab" 
                                                    data-bs-target="#{{ language.code }}-content" 
                                                    type="button" role="tab">
                                                {{ language.nativeName }}
                                                {% if language.isDefault %}
                                                    <span class="badge bg-primary ms-1">Défaut</span>
                                                {% endif %}
                                            </button>
                                        </li>
                                    {% endfor %}
                                </ul>

                                <!-- Language Content -->
                                <div class="tab-content" id="languageTabsContent">
                                    {% for language in languages %}
                                        <div class="tab-pane fade {{ loop.first ? 'show active' : '' }}" 
                                             id="{{ language.code }}-content" 
                                             role="tabpanel">
                                            <div class="p-3">
                                                {% set translationFormName = 'translation_' ~ language.code %}
                                                {% if form[translationFormName] is defined %}
                                                    {{ form_row(form[translationFormName].title) }}
                                                    {{ form_row(form[translationFormName].description) }}
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            {{ form_row(form[translationFormName].metaTitle) }}
                                                        </div>
                                                        <div class="col-md-6">
                                                            {{ form_row(form[translationFormName].metaDescription) }}
                                                        </div>
                                                    </div>
                                                {% endif %}
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mt-4">
                    <div class="col-12">
                        <div class="d-flex justify-content-end gap-2">
                            <a href="{{ path('admin_service_index') }}" class="btn btn-secondary">Annuler</a>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-floppy"></i> Créer le service
                            </button>
                        </div>
                    </div>
                </div>
            {{ form_end(form) }}
        </div>
    </div>
</div>

<script>
// Auto-generate slug from default language title
const defaultTitleInput = document.querySelector('[name="service[translation_{{ defaultLanguage.code }}][title]"]');
const slugInput = document.querySelector('[name="service[slug]"]');

if (defaultTitleInput && slugInput) {
    defaultTitleInput.addEventListener('input', function() {
        if (!slugInput.value) {
            const slug = this.value
                .toLowerCase()
                .replace(/[^\w\s-]/g, '')
                .replace(/[\s_-]+/g, '-')
                .replace(/^-+|-+$/g, '');
            slugInput.value = slug;
        }
    });
}

// Character counters for meta fields
function addCharacterCounter(inputSelector, maxLength) {
    const input = document.querySelector(inputSelector);
    if (input) {
        const counter = document.createElement('small');
        counter.className = 'text-muted ms-2';
        input.parentNode.appendChild(counter);
        
        function updateCounter() {
            const remaining = maxLength - input.value.length;
            counter.textContent = `${input.value.length}/${maxLength} caractères`;
            counter.classList.toggle('text-warning', remaining < 10);
            counter.classList.toggle('text-danger', remaining < 0);
        }
        
        input.addEventListener('input', updateCounter);
        updateCounter();
    }
}

// Add counters for meta fields
{% for language in languages %}
addCharacterCounter('[name="service[translation_{{ language.code }}][metaTitle]"]', 60);
addCharacterCounter('[name="service[translation_{{ language.code }}][metaDescription]"]', 160);
{% endfor %}
</script>
{% endblock %}
